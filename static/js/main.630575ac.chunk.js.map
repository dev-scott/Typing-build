{"version":3,"sources":["components/Add.jsx","img/Crain Worker 3 by Streamlinehq.png","components/Game/Game.js","components/Leftbar.jsx","components/Navbar.jsx","components/Historique/Historique.jsx","components/Setting/Setting.jsx","components/Logout/Logout.jsx","App.jsx","index.js"],"names":["makeStyles","theme","fab","position","bottom","right","container","width","height","backgroundColor","top","left","margin","breakpoints","down","form","padding","spacing","item","marginBottom","keys","document","querySelectorAll","keyPad","querySelector","display","capsLockMode","forEach","key","addEventListener","this","classList","contains","toggle","str","innerText","substring","length","dataset","toUpperCase","toLowerCase","Game","useState","words","setWords","countDown","setCountDown","currInput","setCurrInput","currWordIndex","setCurrWordIndex","currCharIndex","setCurrCharIndex","currChar","setCurrChar","correct","setCorrect","incorrect","setIncorrect","status","setStatus","textInput","useRef","setErrorr","niveau","setNiveau","number","setNumber","quelNiveau","setQuelNiveau","generateWords","Array","fill","map","randomWords","start","style","interval","setInterval","prevCountdown","clearInterval","getCharClass","wordIdx","charIdx","char","useEffect","current","focus","className","onClick","src","img_niveau","alt","console","log","loop","autoplay","class","Math","round","word","i","split","idx","data-key","ref","disabled","type","onKeyDown","keyCode","trim","value","onChange","e","target","useStyles","color","paddingTop","palette","primary","main","up","border","alignItems","cursor","icon","marginRight","fontSize","text","fontWeight","Leftbar","classes","Container","Home","Typography","to","Person","ExitToApp","toolbar","justifyContent","logoLg","logoSm","search","alpha","common","white","borderRadius","shape","props","open","input","marginLeft","cancel","searchButton","icons","badge","Navbar","setOpen","AppBar","Toolbar","variant","Search","Badge","badgeContent","Mail","Notifications","Avatar","Historique","Setting","Logout","href","App","Grid","sm","xs","path","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.630575ac.chunk.js","sourcesContent":["import {\n  Button,\n  Container,\n  Fab,\n  FormControlLabel,\n  FormLabel,\n  makeStyles,\n  MenuItem,\n  Modal,\n  Radio,\n  RadioGroup,\n  Snackbar,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    position: \"fixed\",\n    bottom: 20,\n    right: 20,\n  },\n  container: {\n    width: 500,\n    height: 550,\n    backgroundColor: \"white\",\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    margin: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100vw\",\n      height: \"100vh\",\n    },\n  },\n  form: {\n    padding: theme.spacing(2),\n  },\n  item: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Add = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [openAlert, setOpenAlert] = useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenAlert(false);\n  };\n  return (\n    <>\n      <Tooltip title=\"Add\" aria-label=\"add\" onClick={() => setOpen(true)}>\n        <Fab color=\"primary\" className={classes.fab}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n      <Modal open={open}>\n        <Container className={classes.container}>\n          <form className={classes.form} autoComplete=\"off\">\n            <div className={classes.item}>\n              <TextField\n                id=\"standard-basic\"\n                label=\"Title\"\n                size=\"small\"\n                style={{ width: \"100%\" }}\n              />\n            </div>\n            <div className={classes.item}>\n              <TextField\n                id=\"outlined-multiline-static\"\n                multiline\n                rows={4}\n                defaultValue=\"Tell your story...\"\n                variant=\"outlined\"\n                label=\"Description\"\n                size=\"small\"\n                style={{ width: \"100%\" }}\n              />\n            </div>\n            <div className={classes.item}>\n              <TextField select label=\"Visibility\" value=\"Public\">\n                <MenuItem value=\"Public\">Public</MenuItem>\n                <MenuItem value=\"Private\">Private</MenuItem>\n                <MenuItem value=\"Unlisted\">Unlisted</MenuItem>\n              </TextField>\n            </div>\n            <div className={classes.item}>\n              <FormLabel component=\"legend\">Who can comment?</FormLabel>\n              <RadioGroup>\n                <FormControlLabel\n                  value=\"Everybody\"\n                  control={<Radio size=\"small\" />}\n                  label=\"Everybody\"\n                />\n                <FormControlLabel\n                  value=\"My Friends\"\n                  control={<Radio size=\"small\" />}\n                  label=\"My Friends\"\n                />\n                <FormControlLabel\n                  value=\"Nobody\"\n                  control={<Radio size=\"small\" />}\n                  label=\"Nobody\"\n                />\n                <FormControlLabel\n                  value=\"Custom\"\n                  disabled\n                  control={<Radio size=\"small\" />}\n                  label=\"Custom (Premium)\"\n                />\n              </RadioGroup>\n            </div>\n            <div className={classes.item}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                style={{ marginRight: 20 }}\n                onClick={() => setOpenAlert(true)}\n              >\n                Create\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                onClick={() => setOpen(false)}\n              >\n                Cancel\n              </Button>\n            </div>\n          </form>\n        </Container>\n      </Modal>\n      <Snackbar\n        open={openAlert}\n        autoHideDuration={4000}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n      >\n        <Alert onClose={handleClose} severity=\"success\">\n          This is a success message!\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default Add;\n","export default __webpack_public_path__ + \"static/media/Crain Worker 3 by Streamlinehq.f26fba99.png\";","import React from 'react'\r\nimport \"./Game.scss\"\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport randomWords from 'random-words'\r\nimport { Player } from '@lottiefiles/react-lottie-player';\r\nimport img_niveau from \"../../img/Crain Worker 3 by Streamlinehq.png\"\r\n\r\n// var NUMB_OF_WORDS\r\nconst SECONDS = 30\r\n// let error = 0\r\nlet niv\r\n\r\n// let niveaux = false;\r\n\r\n\r\n\r\nlet keys = document.querySelectorAll('.keyboard_wrapper .key .row span'),\r\n    keyPad = document.querySelector('.keyboard_wrapper .key'),\r\n    display = document.querySelector('.keyboard_wrapper .display');\r\nif (keys && keyPad && display) {\r\n    let capsLockMode = false;\r\n    keys.forEach(key => {\r\n        key.addEventListener('click', function () {\r\n            // console.log(this.innerText);\r\n            if (this.classList.contains('caps')) {\r\n                this.classList.toggle('active');\r\n                keyPad.classList.toggle('uppercase');\r\n                capsLockMode ? capsLockMode = false : capsLockMode = true;\r\n            }\r\n            else if (this.classList.contains('backspace')) {\r\n                let str = display.innerText;\r\n                display.innerText = str.substring(0, (str.length - 1));\r\n            } else {\r\n                if (capsLockMode) {\r\n                    display.innerText += this.dataset.key.toUpperCase();\r\n                } else {\r\n                    display.innerText += this.dataset.key.toLowerCase();\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n\r\n\r\nconst Game = () => {\r\n\r\n    const [words, setWords] = useState([])\r\n    const [countDown, setCountDown] = useState(SECONDS)\r\n    const [currInput, setCurrInput] = useState(\"\")\r\n    const [currWordIndex, setCurrWordIndex] = useState(0)\r\n    const [currCharIndex, setCurrCharIndex] = useState(-1)\r\n    const [currChar, setCurrChar] = useState(\"\")\r\n    const [correct, setCorrect] = useState(0)\r\n    const [incorrect, setIncorrect] = useState(0)\r\n    const [status, setStatus] = useState(\"waiting\")\r\n    const textInput = useRef(null)\r\n    const [errorr, setErrorr] = useState(0)\r\n    const [niveau, setNiveau] = useState(false)\r\n    const [number, setNumber] = useState();\r\n    const [quelNiveau, setQuelNiveau] = useState(\"\");\r\n\r\n\r\n    function changeSizeWord1() {\r\n\r\n        // niveaux = true\r\n        setNiveau(true)\r\n        // niv = 1\r\n        setNumber(50)\r\n\r\n\r\n        let niv1 = true\r\n        setQuelNiveau(\"un\")\r\n\r\n    }\r\n    function changeSizeWord2() {\r\n        // niv = 2\r\n\r\n        setNiveau(true)\r\n        // return NUMB_OF_WORDS = 70\r\n        setNumber(70)\r\n\r\n        setQuelNiveau(\"deux\")\r\n        let niv2 = true\r\n\r\n\r\n\r\n    }\r\n    function changeSizeWord3() {\r\n        // niv = 3\r\n\r\n        setNiveau(true)\r\n        // return NUMB_OF_WORDS = 100\r\n        setNumber(100)\r\n        console.log(number)\r\n        let niv3 = true\r\n        setQuelNiveau(\"trois\")\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setWords(generateWords())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (status === 'started') {\r\n            textInput.current.focus()\r\n        }\r\n    }, [status])\r\n\r\n    function generateWords() {\r\n\r\n\r\n        if (quelNiveau === 'un') {\r\n\r\n            return new Array(20).fill(null).map(() => randomWords())\r\n        }\r\n        else if (quelNiveau === 'deux') {\r\n            return new Array(80).fill(null).map(() => randomWords())\r\n\r\n        }\r\n        else {\r\n            return new Array(50).fill(null).map(() => randomWords())\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    function hidde() {\r\n        document.querySelector('.btn_begin').style.display = 'none';\r\n    }\r\n    function start() {\r\n\r\n        if (status === 'finished') {\r\n            setWords(generateWords())\r\n            setCurrWordIndex(0)\r\n            setCorrect(0)\r\n            setIncorrect(0)\r\n            setErrorr(0)\r\n            setCurrCharIndex(-1)\r\n            setCurrChar(\"\")\r\n        }\r\n\r\n        if (status !== 'started') {\r\n            document.querySelector('.contain_anime').style.display = 'none';\r\n\r\n\r\n            setStatus('started')\r\n            let interval = setInterval(() => {\r\n                setCountDown((prevCountdown) => {\r\n                    if (prevCountdown === 0) {\r\n                        clearInterval(interval)\r\n                        setStatus('finished')\r\n                        setCurrInput(\"\")\r\n                        return SECONDS\r\n                    } else {\r\n                        return prevCountdown - 1\r\n                    }\r\n                })\r\n            }, 1000)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function handleKeyDown({ keyCode, key }) {\r\n        // space bar \r\n        if (keyCode === 32) {\r\n            checkMatch()\r\n            setCurrInput(\"\")\r\n            setCurrWordIndex(currWordIndex + 1)\r\n            setCurrCharIndex(-1)\r\n            // backspace\r\n        } else if (keyCode === 8) {\r\n            setCurrCharIndex(currCharIndex - 1)\r\n            setCurrChar(\"\")\r\n        } else {\r\n            setCurrCharIndex(currCharIndex + 1)\r\n            setCurrChar(key)\r\n        }\r\n    }\r\n\r\n    function checkMatch() {\r\n        const wordToCompare = words[currWordIndex]\r\n        const doesItMatch = wordToCompare === currInput.trim()\r\n        if (doesItMatch) {\r\n            setCorrect(correct + 1)\r\n        } else {\r\n            setIncorrect(incorrect + 1)\r\n        }\r\n    }\r\n\r\n    function getCharClass(wordIdx, charIdx, char) {\r\n        if (wordIdx === currWordIndex && charIdx === currCharIndex && currChar && status !== 'finished') {\r\n            if (char === currChar) {\r\n                return 'has-background-success'\r\n            } else {\r\n                // setErrorr(errorr + 1)\r\n                return 'has-background-danger'\r\n            }\r\n        } else if (wordIdx === currWordIndex && currCharIndex >= words[currWordIndex].length) {\r\n            return 'has-background-danger'\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"contain_all_game\">\r\n\r\n\r\n            <div className='contain_game'>\r\n\r\n\r\n                {niveau === false && (\r\n\r\n                    <div className=\"contain_niveaux\">\r\n                        <div className=\" niveau niveau_facile\" onClick={changeSizeWord1}>\r\n\r\n\r\n                            <div className=\"img_niveau\">\r\n                                <span>1</span>\r\n                                <img src={img_niveau} alt=\"\" />\r\n\r\n                            </div>\r\n\r\n                            <div className=\"footer_niveau\">\r\n                                <h2>Niveau facile</h2>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\" niveau niveau_moyen\" onClick={changeSizeWord2}>\r\n\r\n\r\n                            <div className=\"img_niveau\">\r\n                                <span>2</span>\r\n                                <img src={img_niveau} alt=\"\" />\r\n\r\n\r\n                            </div>\r\n\r\n                            <div className=\"footer_niveau\">\r\n                                <h2>Niveau moyen</h2>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\" niveau niveau_difficil\" onClick={changeSizeWord3}>\r\n\r\n\r\n                            <div className=\"img_niveau\">\r\n                                <span>3</span>\r\n                                <img src={img_niveau} alt=\"\" />\r\n\r\n\r\n                            </div>\r\n\r\n                            <div className=\"footer_niveau\">\r\n                                <h2>Niveau difficil</h2>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                )}\r\n\r\n\r\n                {niveau === true && (\r\n                    <div className=\"contain_anime\">\r\n                        {/* <lottie-player id=\"firstLottie\" src=\"https://assets3.lottiefiles.com/packages/lf20_O2ci8jA9QF.json\" style=\"width:400px; height: 400px;\">\"></lottie-player> */}\r\n\r\n                        {/* <iframe src=\"https://embed.lottiefiles.com/animation/125746\"></iframe> */}\r\n                        <Player src='https://assets3.lottiefiles.com/packages/lf20_O2ci8jA9QF.json' loop autoplay style={{ height: '400px', width: '300px' }} />\r\n\r\n                        <div className='btn_anime'><button className='btn_begin' onClick={start}  >commencer</button></div>\r\n                    </div>\r\n\r\n                )}\r\n\r\n\r\n\r\n\r\n                {status === 'finished' && (\r\n                    <div className=\"contain_finish\">\r\n                        <Player src='https://assets6.lottiefiles.com/packages/lf20_xldzoar8.json' autoplay style={{ height: '400px', width: '300px' }} />\r\n                        <div class=\"content\">\r\n                            <ul class=\"result\">\r\n                                <li class=\"time\">\r\n                                    <p>Time</p>\r\n                                    <span>{countDown}</span>\r\n                                </li>\r\n                                <li class=\"errors\">\r\n                                    <p>Errors</p>\r\n                                    <span>{incorrect}</span>\r\n                                </li>\r\n                                <li class=\"wpm\">\r\n                                    <p>WPM</p>\r\n                                    <span>{correct}</span>\r\n                                </li>\r\n                                <li class=\"cpm\">\r\n                                    <p>ACC</p>\r\n                                    <span>  {Math.round((correct / (correct + incorrect)) * 100)}% </span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"contain_btn_fin\">\r\n\r\n\r\n                            <button className='btn_fin' onClick={start} >Relancer</button>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n                {status === 'started' && niveau && (\r\n\r\n                    <div class=\"keyboard_wrapper\">\r\n                        <div class=\"display\">\r\n\r\n\r\n\r\n\r\n                            <>\r\n                                {words.map((word, i) => (\r\n                                    <span key={i}>\r\n                                        <span>\r\n                                            {word.split(\"\").map((char, idx) => (\r\n                                                <span className={getCharClass(i, idx, char)} key={idx}>{char}</span>\r\n                                            ))}\r\n                                        </span>\r\n                                        <span> </span>\r\n                                    </span>\r\n                                ))}\r\n                            </>\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div class=\"key\">\r\n                            <div class=\"row\">\r\n                                <span data-key=\"q\">q</span>\r\n                                <span data-key=\"w\">w</span>\r\n                                <span data-key=\"e\">e</span>\r\n                                <span data-key=\"r\">r</span>\r\n                                <span data-key=\"t\">t</span>\r\n                                <span data-key=\"y\">y</span>\r\n                                <span data-key=\"u\">u</span>\r\n                                <span data-key=\"i\">i</span>\r\n                                <span data-key=\"o\">o</span>\r\n                                <span data-key=\"p\">p</span>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <span data-key=\"a\">a</span>\r\n                                <span data-key=\"s\">s</span>\r\n                                <span data-key=\"d\">d</span>\r\n                                <span data-key=\"f\">f</span>\r\n                                <span data-key=\"g\">g</span>\r\n                                <span data-key=\"h\">h</span>\r\n                                <span data-key=\"j\">j</span>\r\n                                <span data-key=\"k\">k</span>\r\n                                <span data-key=\"l\">l</span>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <span class=\"caps\">caps</span>\r\n                                <span data-key=\"z\">z</span>\r\n                                <span data-key=\"x\">x</span>\r\n                                <span data-key=\"c\">c</span>\r\n                                <span data-key=\"v\">v</span>\r\n                                <span data-key=\"b\">b</span>\r\n                                <span data-key=\"n\">n</span>\r\n                                <span data-key=\"m\">m</span>\r\n                                <span class=\"backspace\">\r\n                                    <i class=\"fa fa-angle-left\"></i>\r\n                                    <i class=\"fa fa-close\"></i>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <span class=\"space\" data-key=\" \">\r\n                                    Space\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                )}\r\n\r\n                <input ref={textInput} disabled={status !== \"started\"} type=\"text\" className=\"input \" onKeyDown={handleKeyDown} value={currInput} onChange={(e) => setCurrInput(e.target.value)} />\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            {status === 'started' && niveau && (\r\n\r\n\r\n                <div className='contain_Rightbar'>\r\n\r\n                    <div class=\"content\">\r\n                        <ul class=\"result\">\r\n                            <li class=\"time\">\r\n                                <p>Time</p>\r\n                                <span>{countDown}</span>\r\n                            </li>\r\n                            <li class=\"errors\">\r\n                                <p>Errors</p>\r\n                                <span>{incorrect}</span>\r\n                            </li>\r\n                            <li class=\"wpm\">\r\n                                <p>WPM</p>\r\n                                <span>{correct}</span>\r\n                            </li>\r\n                            <li class=\"cpm\">\r\n                                <p>ACC</p>\r\n                                <span>  {Math.round((correct / (correct + incorrect)) * 100)}% </span>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            )}\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Game","import { Container, makeStyles, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Bookmark,\n  List,\n  ExitToApp,\n  Home,\n  Person,\n  PhotoCamera,\n  PlayCircleOutline,\n  Settings,\n  Storefront,\n  TabletMac,\n} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    color: \"white\",\n    paddingTop: theme.spacing(10),\n    backgroundColor: theme.palette.primary.main,\n    position: \"sticky\",\n    top: 0,\n    [theme.breakpoints.up(\"sm\")]: {\n      backgroundColor: \"white\",\n      color: \"#555\",\n      border: \"1px solid #ece7e7\",\n    },\n  },\n  item: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(4),\n    [theme.breakpoints.up(\"sm\")]: {\n      marginBottom: theme.spacing(3),\n      cursor: \"pointer\",\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      fontSize: \"18px\",\n    },\n  },\n  text: {\n    fontWeight: 500,\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst Leftbar = () => {\n  const classes = useStyles();\n  return (\n    <Container className={classes.container}>\n      <div className={classes.item}>\n        <Home className={classes.icon} />\n        <Typography className={classes.text}> <Link to='/'> Homepage </Link> </Typography>\n      </div>\n      <div className={classes.item}>\n        <Person className={classes.icon} />\n        <Typography className={classes.text}> <Link to='historique'> Historique </Link> </Typography>\n      </div>\n   \n    \n      {/* <div className={classes.item}>\n        <Settings className={classes.icon} />\n        <Typography className={classes.text}> <Link to='setting'>  Settings </Link> </Typography>\n      </div> */}\n      <div className={classes.item}>\n        <ExitToApp className={classes.icon} />\n        <Typography className={classes.text}> <Link to='logout'> Logout  </Link> </Typography>\n      </div>\n    </Container>\n  );\n};\n\nexport default Leftbar;\n","import {\n  alpha,\n  AppBar,\n  Avatar,\n  Badge,\n  InputBase,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { Cancel, Mail, Notifications, Search } from \"@material-ui/icons\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  logoLg: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  logoSm: {\n    display: \"block\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  search: {\n    display: \"flex\",\n    alignItems: \"center\",\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    borderRadius: theme.shape.borderRadius,\n    width: \"50%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: (props) => (props.open ? \"flex\" : \"none\"),\n      width: \"70%\",\n    },\n  },\n  input: {\n    color: \"white\",\n    marginLeft: theme.spacing(1),\n  },\n  cancel: {\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  searchButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  icons: {\n    alignItems: \"center\",\n    display: (props) => (props.open ? \"none\" : \"flex\"),\n  },\n  badge: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst Navbar = () => {\n  const [open, setOpen] = useState(false);\n  const classes = useStyles({ open });\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\" className={classes.logoLg}>\n          TYPING-FAST\n        </Typography>\n        <Typography variant=\"h6\" className={classes.logoSm}>\n          LAMA\n        </Typography>\n            {/* <Badge badgeContent={4} color=\"secondary\" className={classes.badge}>\n            <Mail />\n          </Badge> */}\n       \n        <div className={classes.icons}>\n          <Search\n            className={classes.searchButton}\n            onClick={() => setOpen(true)}\n          />\n          <Badge badgeContent={4} color=\"secondary\" className={classes.badge}>\n            <Mail />\n          </Badge>\n          <Badge badgeContent={2} color=\"secondary\" className={classes.badge}>\n            <Notifications />\n          </Badge>\n          <Avatar\n            alt=\"Remy Sharp\"\n            src=\"https://images.pexels.com/photos/8647814/pexels-photo-8647814.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\n          />\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React from 'react'\r\nimport \"./Historique.scss\"\r\n\r\nconst Historique = () => {\r\n  return (\r\n    <div className='contain_historique'>Historique</div>\r\n  )\r\n}\r\n\r\nexport default Historique","import React from 'react'\r\nimport \"./Setting.scss\"\r\n\r\nconst Setting = () => {\r\n  return (\r\n    <div className='contain_setting'>Setting</div>\r\n  )\r\n}\r\n\r\nexport default Setting","import React from 'react'\r\nimport \"./Logout.scss\"\r\nimport { Player } from '@lottiefiles/react-lottie-player';\r\n\r\n\r\nconst Logout = () => {\r\n  return (\r\n    <div className='contain_logout'>\r\n        \r\n                                <Player src='https://assets8.lottiefiles.com/packages/lf20_vmlm0zew.json' loop autoplay style={{ height: '400px', width: '300px' }} />\r\n\r\n                            <div className='btn_anime'> <a href=\"https://typing-nine-zeta.vercel.app/\"> <button className='btn_begin'  >  Se deconnecter  </button> </a> </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logout","import { Grid, makeStyles } from \"@material-ui/core\";\nimport \"./App.scss\";\nimport Add from \"./components/Add\";\nimport Game from \"./components/Game/Game\";\n// import Feed from \"./components/Feed\";\nimport Leftbar from \"./components/Leftbar\";\nimport Navbar from \"./components/Navbar\";\nimport Rightbar from \"./components/Rightbar/Rightbar\";\nimport { Routes , Route } from \"react-router-dom\";\nimport Historique from \"./components/Historique/Historique\";\nimport Setting from \"./components/Setting/Setting\";\nimport Logout from \"./components/Logout/Logout\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  right: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <div className=\"contain_all\">\n      <Navbar />\n      <Grid container>\n        <Grid item sm={2} xs={2}>\n\n          <Leftbar />\n        </Grid>\n        <Grid item sm={10} xs={10}>\n          <Routes>\n            <Route path=\"/\" element={<Game/>} />\n            <Route path=\"/historique\" element={<Historique/>} />\n            <Route path=\"/setting\" element={<Setting/>} />\n            <Route path=\"/logout\" element={<Logout/>} />\n\n\n\n          </Routes>\n        </Grid>\n     \n      </Grid>\n      {/* <Add /> */}\n    </div>\n  );\n};\n\nexport default App;\n","import { ThemeProvider } from \"@material-ui/styles\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}